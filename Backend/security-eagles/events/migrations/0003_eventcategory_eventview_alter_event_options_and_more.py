# Generated by Django 5.2.3 on 2025-07-06 13:32

import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0002_event_in_lights_date'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code', max_length=7)),
                ('icon', models.CharField(blank=True, help_text='Icon class name', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Event Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EventView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='event',
            options={'ordering': ['-start_time']},
        ),
        migrations.AlterModelOptions(
            name='eventimage',
            options={'ordering': ['order', 'created_at']},
        ),
        migrations.AlterModelOptions(
            name='eventregistration',
            options={'ordering': ['-created_at']},
        ),
        migrations.RenameField(
            model_name='event',
            old_name='recurrence_date',
            new_name='published_at',
        ),
        migrations.RemoveField(
            model_name='event',
            name='platform',
        ),
        migrations.RemoveField(
            model_name='event',
            name='platform_url',
        ),
        migrations.AlterUniqueTogether(
            name='eventregistration',
            unique_together={('user', 'event')},
        ),
        migrations.AddField(
            model_name='event',
            name='address',
            field=models.TextField(blank=True, help_text='Full address for physical events'),
        ),
        migrations.AddField(
            model_name='event',
            name='admin_notes',
            field=models.TextField(blank=True, help_text='Internal admin notes'),
        ),
        migrations.AddField(
            model_name='event',
            name='is_featured',
            field=models.BooleanField(default=False, help_text='Featured on homepage'),
        ),
        migrations.AddField(
            model_name='event',
            name='meta_description',
            field=models.CharField(blank=True, max_length=160),
        ),
        migrations.AddField(
            model_name='event',
            name='meta_keywords',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='event',
            name='objectives',
            field=models.TextField(blank=True, help_text='Event objectives and goals'),
        ),
        migrations.AddField(
            model_name='event',
            name='organizer_email',
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.AddField(
            model_name='event',
            name='organizer_phone',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='event',
            name='organizer_website',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='event',
            name='parent_event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recurring_instances', to='events.event'),
        ),
        migrations.AddField(
            model_name='event',
            name='platform_urls',
            field=models.JSONField(blank=True, default=dict, help_text='Platform URLs as key-value pairs'),
        ),
        migrations.AddField(
            model_name='event',
            name='platforms',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, help_text='Online platforms', size=None),
        ),
        migrations.AddField(
            model_name='event',
            name='priority',
            field=models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20),
        ),
        migrations.AddField(
            model_name='event',
            name='recurrence_end_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='recurrence_interval',
            field=models.PositiveIntegerField(default=1, help_text='Interval for recurrence'),
        ),
        migrations.AddField(
            model_name='event',
            name='recurrence_type',
            field=models.CharField(choices=[('none', 'No Recurrence'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], default='none', max_length=20),
        ),
        migrations.AddField(
            model_name='event',
            name='registration_required',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='event',
            name='registration_url',
            field=models.URLField(blank=True, help_text='External registration URL'),
        ),
        migrations.AddField(
            model_name='event',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='event',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('review', 'Under Review'), ('published', 'Published'), ('cancelled', 'Cancelled'), ('archived', 'Archived')], default='draft', max_length=20),
        ),
        migrations.AddField(
            model_name='event',
            name='subtitle',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='event',
            name='tags',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, help_text='Tags for filtering', size=None),
        ),
        migrations.AddField(
            model_name='event',
            name='timezone_info',
            field=models.CharField(default='UTC', help_text='Event timezone', max_length=50),
        ),
        migrations.AddField(
            model_name='event',
            name='views',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='eventimage',
            name='alt_text',
            field=models.CharField(blank=True, help_text='Alt text for accessibility', max_length=255),
        ),
        migrations.AddField(
            model_name='eventimage',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='eventimage',
            name='is_featured',
            field=models.BooleanField(default=False, help_text='Use as main event image'),
        ),
        migrations.AddField(
            model_name='eventimage',
            name='order',
            field=models.PositiveIntegerField(default=0, help_text='Display order'),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='notes',
            field=models.TextField(blank=True, help_text='User notes or special requirements'),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='registration_data',
            field=models.JSONField(blank=True, default=dict, help_text='Additional registration info'),
        ),
        migrations.AlterField(
            model_name='event',
            name='description',
            field=models.TextField(help_text='Brief description for listings'),
        ),
        migrations.AlterField(
            model_name='event',
            name='event_type',
            field=models.CharField(choices=[('conference', 'Conference'), ('workshop', 'Workshop'), ('webinar', 'Webinar'), ('meetup', 'Meetup'), ('seminar', 'Seminar'), ('training', 'Training'), ('networking', 'Networking'), ('other', 'Other')], default='other', max_length=20),
        ),
        migrations.AlterField(
            model_name='event',
            name='in_lights_date',
            field=models.DateTimeField(blank=True, help_text='Date when event is highlighted', null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='location',
            field=models.CharField(blank=True, help_text='Physical location', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='long_description',
            field=models.TextField(help_text='Detailed event description'),
        ),
        migrations.AlterField(
            model_name='eventimage',
            name='image',
            field=models.ImageField(upload_to='events/images/%Y/%m/'),
        ),
        migrations.AddField(
            model_name='event',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='events.eventcategory'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['status', 'start_time'], name='events_even_status_189ced_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['category', 'status'], name='events_even_categor_f85a11_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['is_featured', 'status'], name='events_even_is_feat_ff8c54_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['tags'], name='events_even_tags_80dee6_idx'),
        ),
        migrations.AddField(
            model_name='eventview',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='view_records', to='events.event'),
        ),
        migrations.AddField(
            model_name='eventview',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='eventregistration',
            name='meta_data',
        ),
        migrations.AddIndex(
            model_name='eventview',
            index=models.Index(fields=['event', 'created_at'], name='events_even_event_i_550a40_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='eventview',
            unique_together={('event', 'user', 'ip_address')},
        ),
    ]
